import org.pgpainless.PGPainless;
import org.pgpainless.encryption_signing.EncryptionOptions;
import org.pgpainless.encryption_signing.EncryptionStream;
import org.pgpainless.encryption_signing.ProducerOptions;
import org.pgpainless.algorithm.SymmetricKeyAlgorithm;
import org.pgpainless.algorithm.CompressionAlgorithm;
import org.pgpainless.key.collection.PGPPublicKeyRing;

import java.io.*;
import java.nio.charset.StandardCharsets;
import java.util.Base64;

public class PGPEncryption {

    /**
     * Encrypt a file using PGPainless 1.7.4 and a Base64 public key string.
     */
    public static void encryptFile(File inputFile, String base64PublicKey, File outputFile) throws IOException {
        // Decode Base64-encoded public key string
        byte[] keyBytes = Base64.getDecoder().decode(base64PublicKey.getBytes(StandardCharsets.UTF_8));

        // Load the public key
        PGPPublicKeyRing publicKeyRing = PGPainless.readKeyRing()
                .publicKeyRing(new ByteArrayInputStream(keyBytes));

        // Configure encryption options
        EncryptionOptions encryptionOptions = EncryptionOptions.get()
                .addRecipient(publicKeyRing)
                .overrideEncryptionAlgorithm(SymmetricKeyAlgorithm.AES_256);

        // Configure producer options (with optional compression and ASCII armor)
        ProducerOptions producerOptions = ProducerOptions.encrypt(encryptionOptions)
                .overrideCompressionAlgorithm(CompressionAlgorithm.ZIP)
                .setAsciiArmor(false); // set to true if you want .asc text output

        // Perform encryption
        try (OutputStream fileOut = new FileOutputStream(outputFile);
             EncryptionStream encryptionStream = PGPainless.encryptAndOrSign()
                     .onOutputStream(fileOut)
                     .withOptions(producerOptions);
             InputStream inputStream = new FileInputStream(inputFile)) {

            inputStream.transferTo(encryptionStream);
        }

        System.out.println("âœ… File encrypted successfully: " + outputFile.getAbsolutePath());
    }

    public static void main(String[] args) throws IOException {
        File input = new File("test.txt");
        File output = new File("test.txt.pgp");

        // Replace with your actual Base64 public key
        String publicKeyBase64 = "mQENBFq...==";

        encryptFile(input, publicKeyBase64, output);
    }
}
